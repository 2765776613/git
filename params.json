{"name":"Git","tagline":"git基础操作的笔记","body":"## 开源项目贡献流程\r\n\r\n1. 新建issue\r\n\r\n   提交使用问题或者建议或者想法\r\n\r\n2. pull request \r\n\r\n   步骤：\r\n\r\n   \t1. fork项目\r\n    \t2. 修改自己仓库的项目代码\r\n    \t3. 新建pull request\r\n    \t4. 等待作者操作审核\r\n\r\n## Git工作区域\r\n\r\n1. 工作区：添加、编辑、修改文件等动作             \r\n2. 暂存区：暂存修改的文件\r\n3. Git仓库：最终确定的稳定保存到仓库，成为一个新的版本，并且对他人可见\r\n\r\n```\r\n工作区-->暂存区：\r\n    git add hello.php\r\n    git add test.php\r\n暂存区-->Git仓库：\r\n\tgit commit -m \"提交描述\"\r\n```\r\n\r\n**注意：git status  :   确定文件当前所处Git工作区域**\r\n\r\n## Git初始化及仓库创建和操作\r\n\r\n### 1. 基本信息设置\r\n\r\n> 1. 设置用户名\r\n>\r\n>    git config --global user.name '2765776613'\r\n>\r\n> 2. 设置用户名邮箱\r\n>\r\n>    git config --global user.email '2765776613@qq.com'\r\n>\r\n> 3. 查看设置\r\n>\r\n>    git config --list\r\n\r\n**注意**：该设置在github仓库主页显示谁提交了该文件\r\n\r\n### 2. 初始化一个新的Git仓库\r\n\r\n1. 创建文件夹\r\n\r\n   > mkdir test\r\n\r\n2. 在文件内初始化git（创建git仓库）\r\n\r\n   > cd test\r\n   >\r\n   > git init  \r\n### 3. 向仓库添加文件\r\n\r\n   1. 创建一个文件\r\n\r\n      > touch a1.php\r\n\r\n   2. 添加到暂存区\r\n\r\n      > git add a1.php\r\n\r\n   3. 将文件从暂存区提交到Git仓库\r\n\r\n      > git commit -m 'add a1.php'\r\n\r\n### 4.  修改仓库文件\r\n\r\n   1. 修改文件\r\n\r\n      > vi a1.php\r\n\r\n   2. 添加到暂存区\r\n\r\n      > git add a1.php\r\n\r\n   3. 将文件从暂存区提交到Git仓库\r\n\r\n      > git commit -m '第一次通过git修改文件并提交到仓库'\r\n\r\n### 5. 删除仓库文件\r\n\r\n   1. 删除文件\r\n\r\n      > rm a1.php\r\n\r\n   2. 从git中删除文件\r\n\r\n      > git rm a1.php\r\n\r\n   3. 提交操作\r\n\r\n      > git commit -m '第一次通过git删除仓库文件'\r\n\r\n## Git管理远程仓库\r\n\r\n### 1. 使用远程仓库的目的：备份，实现代码共享集中化管理\r\n\r\n### 2. Git克隆操作\r\n\r\n1. 目的：将远程仓库（github对应的项目）复制到本地\r\n\r\n2. 代码：\r\n\r\n   `git clone 仓库地址`\r\n\r\n### 3. 将本地仓库同步到git远程仓库中\r\n\r\n​\t\t`git push`\r\n\r\n## Github Pages 搭建网站\r\n\r\n**个人站点：**\t\r\n\r\n1. 访问：https://用户名.github.io\r\n2. 搭建步骤：\r\n\r\n​\t1）创建个人站点  ：  新建仓库（仓库名必须 是 【用户名.github.io】\r\n\r\n​\t2）在仓库下新建index.html的文件  ：  作为网站首页\r\n\r\n**项目站点：**\r\n\r\n1. 访问：https://用户名.github.io/仓库名\r\n\r\n2. 搭建步骤：\r\n\r\n   1） 进入项目主页，点击settings\r\n\r\n   2） 在settings页面，点击【Launch automatic page generator】来自动生成主体页面\r\n\r\n   3） 新建站点基础信息设置\r\n\r\n   4） 选择主题\r\n\r\n   5） 生成网页\r\n\r\n   **注意：可在项目主页中的branches中的gh-pages目录下更改网页结构**\r\n\r\n\r\n\r\n","note":"Don't delete this file! It's used internally to help with page regeneration."}